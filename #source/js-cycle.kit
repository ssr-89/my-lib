<!DOCTYPE html>
<html lang="ru">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Циклы</title>
	<link rel="stylesheet" href="../css/style.css">
	<link rel="stylesheet" href="../css/accordion.css">
	<link rel="stylesheet" href="css/js-main.css">
	<link rel="stylesheet" href="../css/section-menu.css">
	<script defer src="../js/script.js"></script>
	<script defer src="../js/accordion.js"></script>
	<script defer src="js/js-main.js"></script>
</head>
<body>
	<main class="main">
		<section class="section-menu">
			<div class="section-menu__container">
				<h1 class="section-menu__title title">Циклы (cycle)</h1>
				<nav class="section-menu__menu menu">
					<ul class="menu__list list">
						<li class="menu__item">
							<a class="menu__link link" href="#for">for</a>
						</li>
						<li class="menu__item">
							<a class="menu__link link" href="#for-of">for of</a>
						</li>
						<li class="menu__item">
							<a class="menu__link link" href="#for-in">for in</a>
						</li>
						<li class="menu__item">
							<a class="menu__link link" href="#while">while</a>
						</li>
						<li class="menu__item">
							<a class="menu__link link" href="#fo-while">fo while</a>
						</li>
						<li class="menu__item">
							<a class="menu__link link" href="#continue">continue</a>
						</li>
						<li class="menu__item">
							<a class="menu__link link" href="#break">break</a>
						</li>
						<li class="menu__item">
							<a class="menu__link link" href="#for-while">for while</a>
						</li>
						<li class="menu__item">
							<a class="menu__link link" href="#select-cycle">Когда и какой цикл выбрать</a>
						</li>						
						<!-- <li class="menu__item">
							<a class="menu__link link" href="#"></a>
						</li> -->
					</ul>
				</nav>
				<button class="section-menu__btn btn">
					<span></span>
				</button>
			</div>
		</section>
		<section class="for" id="for">
			<div class="for__container">
				<h2 class="for__title container-title title">for</h2>
				<a target="_blank" class="js-main__link" href="https://learn.javascript.ru/while-for">Источник</a>
				<div class="for__block accordion" data-spollers data-one-spoller>
					<div class="accordion__item">
						<button class="accordion__title btn" data-spoller>Принцип работы цикла <code class="color-yellow">for</code></button>
						<div class="accordion__content">
							<div class="accordion__wrapper">
								<h3 class="accordion__heading title">
									Цикл <code class="color-yellow">for</code> позволяет выполнять одинаковое действие определённое кол-во раз
								</h3><br>
								<a target="_blank" class="accordion__link link" href="https://codepen.io/archicolt/pen/wvjQGRN?editors=0012">Codepen</a>
								<pre class="accordion__pre">
var fibo = [1,1];

for (var i = 1; i < 9; ++i) { <i class="accordion__i">// к i после каждой итерации прибавляется 1</i>
  fibo.push(fibo[i] + fibo[i - 1]); <i class="accordion__i">// i - это индексы массива, значения которых складываются и прибавляются в конце</i>
}
console.log(fibo);

<i class="accordion__i">//[1,1,2,3,5,8,13,21,34,55] итого 10 чисел</i>
<i class="accordion__i">// 0,1,2,3,4,5,6, 7, 8, 9 - индекс исчисления</i>
								</pre>
								<p class="accordion__text text">
									Принцип работы цикла <code class="color-yellow">for</code>
								</p>
								<pre class="accordion__pre">
1) Начало: var i = 1; <i class="accordion__i">// выполняется один раз при входе в цикл</i>

2) Условие: i < 9; <i class="accordion__i">// выполняется перед каждой итерацией цикла, если оно false, цикл остановится</i>

3) Тело: fibo.push(fibo[i] + fibo[i - 1]);
<i class="accordion__i">// вернёт [1,1,2]. i - индекс массива (порядковый номер элемента)</i>
<i class="accordion__i">// т.е. к элементу массива fibo[i] прибавляется предыдущий элемент массива fibo[i - 1] и получается (1+1=2).</i>
<i class="accordion__i">// Данный код выполняется пока условие true.</i>

4) Шаг: ++i; <i class="accordion__i">// 1 + 1 = 2 = i</i>
5) Условие: i < 9; <i class="accordion__i">// 2 < 9;</i>
6) Тело: fibo.push(fibo[i] + fibo[i - 1]); <i class="accordion__i">// вернёт [1,1,2,3]. Последнее число i = 2 после вычета шага. Значит второе число плюс первое (2+1=3)</i>
7) Шаг: ++i; <i class="accordion__i">// 1 + 2 = 3 = i</i>
8) Условие: i < 9; <i class="accordion__i">// 3 < 9;</i>
9) Тело: fibo.push(fibo[i] + fibo[i - 1]); <i class="accordion__i">// вернёт [1,1,2,3,5]. Последнее число i = 3 после вычета шага. Значит второе число плюс первое (3+2=5)</i>
								</pre>
							</div>
						</div>
					</div>
					<div class="accordion__item">
						<button class="accordion__title btn" data-spoller>Простой пример цикла</button>
						<div class="accordion__content">
							<div class="accordion__wrapper">
								<pre class="accordion__pre">
var i = 0;

for (i; i < 3; i++) {
  console.log(i); <i class="accordion__i">// закончится на 2, потому что МАХ 3 - 0 1 2</i>
}
console.log(i); <i class="accordion__i">// закончится на 3, потому что цикл завершён и возвращает последний результат вне цикла, который не подошёл условиям цикла (false)</i>
								</pre>
							</div>
						</div>
					</div>
					<div class="accordion__item">
						<button class="accordion__title btn" data-spoller>Пример цикла с вероятностью завершения 10%</button>
						<div class="accordion__content">
							<div class="accordion__wrapper">
								<a target="_blank" class="accordion__link link" href="https://codepen.io/archicolt/pen/xxPQrYG?editors=0010">Codepen</a>
								<pre class="accordion__pre">
<i class="accordion__i">// цикл, который может завершиться на любой итерации с вероятностью 10%</i>
for (; Math.random() >= 0.1; ) console.log("И ещё разок"); <i class="accordion__i">// Math.random() >= 0.1; - условие при котором не выполнится цикл</i>
								</pre>
							</div>
						</div>
					</div>
					<div class="accordion__item">
						<button class="accordion__title btn" data-spoller>Пример вечного цикла 1</button>
						<div class="accordion__content">
							<div class="accordion__wrapper">
								<a target="_blank" class="accordion__link link" href="https://codepen.io/archicolt/pen/xxPQrYG?editors=0010">Codepen</a>
								<pre class="accordion__pre">
for (;;) console.log("Я буду сниться тебе в кошмарах"); <i class="accordion__i">// (;;) ничего прописано в первой/второй/третьей частях</i>
								</pre>
							</div>
						</div>
					</div>
					<div class="accordion__item">
						<button class="accordion__title btn" data-spoller>Пример вечного цикла 2</button>
						<div class="accordion__content">
							<div class="accordion__wrapper">
								<a target="_blank" class="accordion__link link" href="https://codepen.io/archicolt/pen/xxPQrYG?editors=0010">Codepen</a>
								<pre class="accordion__pre">
for (let i = 0;; ++i) { console.log(i); } <i class="accordion__i">// выводит максимальное кол-во чисел</i>
								</pre>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
		<section class="for-of" id="for-of">
			<div class="for-of__container">
				<h2 class="for-of__title container-title title">for of</h2>
				<div class="for-of__block accordion" data-spollers data-one-spoller>
					<div class="accordion__item">
						<button class="accordion__title btn" data-spoller>for of</button>
						<div class="accordion__content">
							<div class="accordion__wrapper">
								<h3 class="accordion__heading title">
									<code class="color-yellow">for of</code> принимает элемент массива
								</h3><br>
								<a target="_blank" class="accordion__link link" href="https://codepen.io/archicolt/pen/eYebpLo">Codepen</a>
								<pre class="accordion__pre">
let fruits = ['Яблоко', 'Банан', 'Апельсин', 'Ананас', 'Дыня']; <i class="accordion__i">// массив фруктов</i>

console.log('Сегодня я съел:');

for (let fruit of fruits) {
  console.log(fruit);
}
<i class="accordion__i">
/*
"Сегодня я съел:"
"Яблоко"
"Банан"
"Апельсин"
"Ананас"
"Дыня"
*/
</i>
								</pre>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
		<section class="for-in" id="for-in">
			<div class="for-in__container">
				<h2 class="for-in__title container-title title">for in</h2>
				<div class="for-in__block accordion" data-spollers data-one-spoller>
					<div class="accordion__item">
						<button class="accordion__title btn" data-spoller>for in</button>
						<div class="accordion__content">
							<div class="accordion__wrapper">
								<h3 class="accordion__heading title">
									<code class="color-yellow">for in</code> принимает индекс массива
								</h3><br>
								<a target="_blank" class="accordion__link link" href="https://codepen.io/archicolt/pen/eYebpLo">Codepen</a>
								<p class="accordion__text text">
									Оператор <code class="color-yellow">for in</code>&nbsp;выделяет каждое значение отдельно из&nbsp;массива
								</p>
								<pre class="accordion__pre">
let rating = ['Катя', 'Вася', 'Маша', 'Петя', 'Лена'];

console.log('Рейтинг студентов:');
for (let i in rating) {
  console.log(`${parseInt(i) + 1} место: ${rating[i]}`);
}
<i class="accordion__i">
/*
"Рейтинг студентов:"
"1 место: Катя"
"2 место: Вася"
"3 место: Маша"
"4 место: Петя"
"5 место: Лена"
*/


// parseInt преобразует строку в число. если убрать parseInt, 
то будет двухзначная нумерация - 01 11 21, т.е. конкатена́ция — операция склеивания объектов линейной структуры, обычно строк.. 
операция + будет выбирать последующие категории
</i>
								</pre>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
		<section class="while" id="while">
			<div class="while__container">
				<h2 class="while__title container-title title">while</h2>
				<div class="while__block accordion" data-spollers data-one-spoller>
					<div class="accordion__item">
						<button class="accordion__title btn" data-spoller>while</button>
						<div class="accordion__content">
							<div class="accordion__wrapper">
								<a target="_blank" class="accordion__link link" href="https://codepen.io/archicolt/pen/BamvKRy?editors=0012">Codepen</a>
								<pre class="accordion__pre">
let teaVolume = 200;

console.log("Вы налили себе " + teaVolume + " мл чая");

while (teaVolume > 0) {
  teaVolume -= 10; <i class="accordion__i">// снижает кол-во чая на 10 мл</i>
  console.log("В чашке осталось " + teaVolume + " мл чая");
}
console.log("Вы выпили весь чай");
								</pre>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
		<section class="fo-while" id="fo-while">
			<div class="fo-while__container">
				<h2 class="fo-while__title container-title title">do while</h2>
				<div class="fo-while__block accordion" data-spollers data-one-spoller>
					<div class="accordion__item">
						<button class="accordion__title btn" data-spoller>do while</button>
						<div class="accordion__content">
							<div class="accordion__wrapper">
								<a target="_blank" class="accordion__link link" href="https://codepen.io/archicolt/pen/BamvKRy?editors=0012">Codepen</a>
								<p class="accordion__text text">
									Сначала выполняется итерация, потом проверяется условие
								</p>
								<pre class="accordion__pre">
<i class="accordion__i">
// do while - стоит использовать только, когда условие будет на 100% выполнено хотя бы 1 раз
// для простоты примера представим, что в барабане пистолета 5 слотов и 1 патрон
// вероятность выстрела - 20%
// в данном цикле нет переменной
</i>

do {
  console.log("Нажимаем на спуск");
} while (Math.random() > 0.2); <i class="accordion__i">// пока рандомное число больше 0.2 условие выполняется</i>

console.log("Похоже, вам не повезло");
								</pre>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
		<section class="continue" id="continue">
			<div class="continue__container">
				<h2 class="continue__title container-title title">continue</h2>
				<div class="continue__block accordion" data-spollers data-one-spoller>
					<div class="accordion__item">
						<button class="accordion__title btn" data-spoller>continue</button>
						<div class="accordion__content">
							<div class="accordion__wrapper">
								<a target="_blank" class="accordion__link link" href="https://codepen.io/archicolt/pen/BamMqjM?editors=1112">Codepen</a>
								<pre class="accordion__pre">
<i class="accordion__i">// ВАЖНО! в continue ненужные карты отсеиваются сразу и не участвуют в цикле</i>

let cards = ["2", "Король", "Туз", "5", "6", "Король", "Дама"]; // карты в руке
let hand = [];

for (let card of cards) {
  <i class="accordion__i">// выполняем только для нечётного индекса</i>
  if (card !== "Король" && card !== "Туз") continue; <i class="accordion__i">// continue отсеивает то, что соответствует условию, т.е. '5' не равно 'Король' или 'Туз' и её отсеивает.</i>
  hand.push(card);
  console.log("Карта " + card + " добавлена в руку");
}

console.log("Карты в руке", hand);

<i class="accordion__i">// вернёт</i>
Карта Король добавлена в руку
Карта Туз добавлена в руку
Карта Король добавлена в руку
Карты в руке (3) ['Король', 'Туз', 'Король']
								</pre>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
		<section class="break" id="break">
			<div class="break__container">
				<h2 class="break__title container-title title">break</h2>
				<div class="break__block accordion" data-spollers data-one-spoller>
					<div class="accordion__item">
						<button class="accordion__title btn" data-spoller>break</button>
						<div class="accordion__content">
							<div class="accordion__wrapper">
								<h3 class="accordion__heading title">Принцип работы continue и&nbsp;break</h3><br>
								<a target="_blank" class="accordion__link link" href="https://codepen.io/archicolt/pen/wvPNYgb?editors=0012">Codepen</a>
								<pre class="accordion__pre">
<i class="accordion__i">// ВАЖНО! в break перечисляются все карты до тех пор, пока не попадётся нужная карта. Все карты участвуют в цикле</i>

let cards = ["2", "Король", "Туз", "5", "6", "Валет", "Дама"];

console.log("Ищем даму в колоде...");

let found = false;

for (let card of cards) {
  console.log(`Из колоды вытянута карта ${card}`);
  if (card === "Дама") {
    found = true;
    break; <i class="accordion__i">// выход из цикла если выполняется true</i>
  }
}

console.log(found ? "Мы нашли даму!" : "В колоде нет дам :(");
								</pre>
								<img class="accordion__img img" src="img/cycle/break_continue.jpg" alt="Принцип работы continue и break">
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
		<section class="for-while" id="for-while">
			<div class="for-while__container">
				<h2 class="for-while__title container-title title">for VS while</h2>
				<div class="for-while__block accordion" data-spollers data-one-spoller>
					<div class="accordion__item">
						<button class="accordion__title btn" data-spoller>for VS while</button>
						<div class="accordion__content">
							<div class="accordion__wrapper">
								<a target="_blank" class="accordion__link link" href="https://codepen.io/archicolt/pen/vYWbVdV?editors=0010">Codepen</a>
								<pre class="accordion__pre">
let i;

console.log("Цикл for");

<i class="accordion__i">// цикл for</i>
for (i = 0; i < 11; i += 2) {
  <i class="accordion__i">// в первой части код до выполнения цикла, во второй части условие для выполнения итерации, в третьей части код после каждой итерации</i>
  console.log(i); <i class="accordion__i">// четвёртая часть ТЕЛО ЦИКЛА</i>
}

console.log("Цикл while");

<i class="accordion__i">// аналогичный цикл while с условием для завершения в теле цикла</i>
i = 0;
while (true) {
  if (i > 10) break; <i class="accordion__i">// если i больше 10, то выходим из цикла break</i>
  console.log(i);
  i += 2;
}
								</pre>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
		<section class="select-cycle" id="select-cycle">
			<div class="select-cycle__container">
				<h2 class="select-cycle__title container-title title">Когда и какой цикл выбрать</h2>
				<div class="select-cycle__block accordion" data-spollers data-one-spoller>
					<div class="accordion__item">
						<button class="accordion__title btn" data-spoller>Когда и какой цикл выбрать</button>
						<div class="accordion__content">
							<div class="accordion__wrapper">
								<a target="_blank" class="accordion__link link" href="https://codepen.io/archicolt/pen/XWzGaLb?editors=0012">Codepen</a>
								<pre class="accordion__pre">
<i class="accordion__i">// Простое повторение действий по счётчику</i>
for (let i = 0; i < 10; ++i) {
  console.log(i);
}

<i class="accordion__i">// Заполнение массива на основе счётчика</i>
let a = [];
for (let i = 0; i < 10; ++i) {
  a.push(i * i);
}

<i class="accordion__i">// Заполнение массива на основе значений другого массива</i>
let b = [];
for (let pow2 of a) {
  b.push(pow2 / 2);
}

<i class="accordion__i">// Заполнение пустого массива на основе других данных (длина массива неизвестна)</i>
let c = [];
let next;
white (next = file.nextLine()) {
  c.push(next);
}

<i class="accordion__i">// Обработка значений массива (возможно of)</i>
for (let line in c) {
  console.log('Длина строки:', line.length);
}

<i class="accordion__i">// Обработка индексов массива (возможно in)</i>
for (let number of c) {
  console.log(`Длина строки: ${number}: ${c[number].length}`);
}

<i class="accordion__i">// Обработка значений или индексов массива в обработном порядке</i>
let aReversed = [];
for (let i = a.length - 1; i >= 0; --i) {
  aReversed.push(a[i]);
}

<i class="accordion__i">// Сложная логика выхода из цикла</i>
let currentAttempt = 0;
while (currentAttempt++ < 1000) {
  if (crayfishwhistles()) break;
} <i class="accordion__i">// crayfishwhistles() - какое-то сложное условие. в случае выполнения условия, то иттерация завершается</i>

<i class="accordion__i">// Обработка нескольких массивов одинаковой длины</i>
for (let i in a) {
  console.log(a[i] + aReversed[i]);
}
for (let i = 0; i < a.length; ++i) {
  console.log(a[i] + aReversed[i]);
}

<i class="accordion__i">// Цикл со счётчиком и сложной логикой изменения значения счётчиков</i>
for (let x = 0; x < 100; x += Math.round(Math.random() * 5)) {
  console.log(x);
}
								</pre>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
	</main>
</body>
</html>